---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by knia.
--- DateTime: 2019/4/7 22:28
--- 获取英雄对话和故事
require("getHeroData")
require("utils")
require("xml.xml_cv_museum")
function getHeroDialogs()
    local voice_list = XML_cv_museum.voice
    local voices_ids = XML_cv_museum.voice_id
    local heroids = cfgControlHero:getAllHeroIds()
    local dialogs_ret = {}
    for i, v in pairs(heroids) do
        local heroname = cfgControlHero:getName(v)
        if voices_ids[v] then
            local single_hero_voiceids = voices_ids[v].voice_id
            local tmp = {}
            for j, k in pairs(single_hero_voiceids) do
                local voice_obj = voice_list[k]
                local voice_text_concat = ""
                for n, m in pairs(voice_obj.voice_text) do
                    if n ~= #voice_obj.voice_text then
                        voice_text_concat = voice_text_concat..m[1].."<br>"
                    else
                        voice_text_concat = voice_text_concat..m[1]
                    end
                end
                if not voice_obj.unlock then
                    voice_obj.unlock = ""
                end
                tmp[j] = {
                    ["unlock"] = colorParser(voice_obj.unlock),
                    ["lock"] = voice_obj.lock,
                    ["voice_text"] = voice_text_concat,
                }
                dialogs_ret[heroname] =  tmp
            end
        end
    end
    return dialogs_ret
end

function getHeroStories()
    local heroid = cfgControlHero:getAllHeroIds()
    local stories_ret = {}
    for i, v in pairs(heroid) do
        local heroname = cfgControlHero:getName(v)
        local stories_single_hero = CfgControlHeroStory:getStorys(v)
        local stories_table_single = {}
        for j, k in pairs(stories_single_hero) do
            k.story = string.gsub(k.story,'\\n','<br>')
            stories_table_single[j] = k.story
        end
        stories_ret[heroname] = { ["stories"] = stories_table_single }
    end
    return stories_ret
end